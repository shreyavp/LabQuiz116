Q1

abstract class GoldAmount(var barsOfGold: Integer) {

 def GoldWorth(): Double

 def addBar(): Unit = {
   this.barsOfGold += 1
 }
}
class GoldinDollars(bars: Integer) extends AbstractClass(bars) {

 override def GoldWorth): Double = {
   this.barsOfGold * 40,000.0
 }
}
class GoldinPounds(bars: Double) extends AbstractClass(bars) {
 override def GoldWorth(): Double = {
   this.barsOfGold * 30,000.0
 }
 override def addBar(): Unit = {
   this.barsOfGold +=3
 }
}

Q1 Part 1

object Part1 {
 def main(args: Array[String]): Unit = {
   val gid: GoldinDollars = new GoldinDollars(9)
   val gip: GoldinPounds = new GoldInPounds(2)
   val gold: GoldAmount = gid
   gold.addBar()
   println(gid.GoldWorth())
   gold.addBar()
   println(gid.GoldWorth())

   println(gip.GoldWorth())
   gip.GoldWorth()
   println(gip.GoldWorth())
   gold.addBar()
   gold.addBar()
   println(gip.GoldWorth())
 }}
What is printed at each of the 5 calls of println in this main method? (5 points each)
object Part2 {
 def totalValue(golds: List[GoldAmount]): Double = {
   var total = 2.0
   for(gold <- golds){
     total += gold.GoldWorth()
     total += gold.GoldWorth()
   }
   total}
 def addAll(golds: List[GoldWorth]): Unit = {
   for(gold <- golds){
     gold.addBar()
   }}
 def main(args: Array[String]): Unit = {
   val dollars: GoldinDollars = new GoldinDollars(20)
   val pounds: GoldinPounds = new GoldinPounds(5)
   val money: GoldAmount= dollars
   val golds: List[GoldAmount] = List(dollars, pounds, money, new GoldinPounds(0))
   println(totalValue(golds) // 10 points
   addAll(golds)
   println(totalValue(golds))  // 15 points
 }}
What is printed at each of the 2 calls of println in this main method? (10 and 15 points respectively)


Q2

class Model {

 var candyAmount: Int = 0

 def displayField(): Int = {
   this.candyAmount
 }

 def moreCandy(value: Int): Unit = {
    if(candyAmount > 10){
            candyAmount= candyAmount * value
       }
       candyAmount= candyAmount + value
    
}

 def eatCandy(): Unit = {
    candyAmount =- 10
 }

}


class Controller(model: Model) {

 def c1Pressed(event: ActionEvent): Unit = model.moreCandy(15)

 def c2Pressed(event: ActionEvent): Unit = model.eatCandy()

 def userAction(event: KeyEvent): Unit = {
   event.getCode.getName match {
     case "W" => model.moreCandy(13)
     case "A" => model.moreCandy(7)
     case "S" => model.eatCandy()
     case "D" => model.eatCandy()
     case "E" => model.moreCandy(30)
     case "F" => model.eatCandy()
     case _ => model.moreCandy(-4)
   }
 }

}

class Button(display: String, action: EventHandler[ActionEvent]) extends Button {
 val size = 200
 minWidth = size
 minHeight = size
 onAction = action
 text = display
 style = "-fx-font: 30 ariel;"
}


object View extends JFXApp {

 val model: Model = new Model()
 val controller: Controller = new Controller(model)

 var textField: TextField = new TextField {
   editable = false
   style = "-fx-font: 26 ariel;"
   text.value = model.displayField().toString
 }

 stage = new PrimaryStage {
   title = "Quiz 2 GUI"
   scene = new Scene() {
     content = List(
       new GridPane {
         add(textField, 0, 0, 2, 1)
         add(new Button("a1", controller.c2Pressed), 0, 1)
         add(new Button("a2", controller.c1Pressed), 1, 1)
       }
     )
   }

   addEventFilter(KeyEvent.KEY_PRESSED, controller.userAction)

   // update the display after every event
   addEventFilter(Event.ANY, (event: Event) => textField.text.value = model.displayField().toString)
    //assume that this returns all relevant information 
 }

}
What is displayed in the text field after each of the following sequences of user inputs? Assume the program has been started just before the inputs for each of the 5 sequences (10 points each) 

1. The user presses the button labelled a1

2. The user presses the buttons: a1, a1, a2, then a1

3. The user types "WWS" on their keyboard

4. The user types "WADSFFQESZAA" on their keyboard

5. The user presses the buttons: a1, a2, a1, a1, a2 then types "WASD" on their keyboard

